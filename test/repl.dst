# Bootstrap the language 

# Helper for macro expansion
(def macroexpand (fn recur [x]
    (def y (ast-unwrap x))
	(if (= (type y) :tuple)
		(if (> (length y) 0)
			(do
				(def first (get y 0))
                (def rest (array-slice y 1))
                (def macro (get _env first))
                (if macro (recur (apply macro rest)) x))
            x)
		x)))
